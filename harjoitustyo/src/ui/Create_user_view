from tkinter import ttk, constants
from repository.user_repository import User_Repository
from entities.user import User
class Create_user:
	def __init__(self,root,start_login_view):
		self._root=root
		self._start_login_view1=start_login_view1
		self._frame=None
		self.username_entry=None
		self.password_entry=None
		self.number_entry=None
		self._error_variable = None
		self._error_label = None
		self._initialize()
		
	
		
	def _check_create_user(self):
		username = self._username_entry.get()
        	password = self._password_entry.get()
        	studentnumber=self._number_entry.get()
        	if len(username)==0 or len(password)==0:
        		self._error("creation error")
            		return
            	lista=User_Repository.find_all()
            	for i in lista:
            		if i[0]==username:
            			self._error("creation error")
            			return
            	käyttäjä=User(username,password,studentnumber)
            	User_Repository.create(käyttäjä)
            	self._start_login_view1()
	def _error(self):
		self._error_variable.set(message)
        	self._error_label.grid()
	def pack(self):
		self._frame.pack(fill=constants.X)

	def destroy(self):
		self._frame.destroy()
		
	def _initialize(self):
		self._frame=ttk.Frame(master=self._root)
		heading= ttk.Label(master=self._frame, text="welcome")
		username_label=ttk.Label(master=self._frame,text="Create username")
		
		self.username_entry=ttk.Entry(master=self._frame)
		password_label = ttk.Label(master=self._frame, text="Create password")
		self.password_entry = ttk.Entry(master=self._frame)
		number_label = ttk.Label(master=self._frame, text="Your student number")
		self.number_entry = ttk.Entry(master=self._frame)
		
		create = ttk.Button(master=self._frame, text="Register",command=self._check_create_user)
		last_label=ttk.Label(master=self._frame,text="The first alphabet of the username has to be "A" if you are student, "B" if you are teacher.")
		
		username_label.grid(row=1, column=0,sticky=(constants.E, constants.W))
		self.username_entry.grid(row=1, column=1,sticky=(constants.E, constants.W))
		password_label.grid(row=2, column=0,sticky=(constants.E, constants.W))
		self.password_entry.grid(row=2, column=1,sticky=(constants.E, constants.W))
		number_label.grid(row=3, column=0,sticky=(constants.E, constants.W))
		self.number_entry.grid(row=3, column=1,sticky=(constants.E, constants.W))
		create.grid(row=4, column=0, columnspan=2,sticky=(constants.E, constants.W))
		last_label.grid(row=5, column=0,sticky=(constants.E, constants.W))
		self._frame.grid_columnconfigure(1, weight=1)
		
